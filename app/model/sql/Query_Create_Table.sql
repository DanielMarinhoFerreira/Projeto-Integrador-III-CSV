-- MySQL Script generated by MySQL Workbench
-- 03/27/23 01:59:42

-- -----------------------------------------------------
-- Schema cs_go_db
-- -----------------------------------------------------
-- DROP SCHEMA IF EXISTS `cs_go_db` ;

-- -----------------------------------------------------
-- Schema cs_go_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cs_go_db` DEFAULT CHARACTER SET utf8 ;
USE `cs_go_db` ;

-- -----------------------------------------------------
-- Table `cs_go_db`.`MEMBERS`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`MEMBERS` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`MEMBERS` (
  `membersID` INT NOT NULL AUTO_INCREMENT,
  `Player1`   VARCHAR(45) NOT NULL,
  `Player2`   VARCHAR(45) NOT NULL,
  `Player3`   VARCHAR(45) NOT NULL,
  `Player4`   VARCHAR(45) NOT NULL,
  `Player5`   VARCHAR(45) NOT NULL,
  PRIMARY KEY (`membersID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`TEAMS`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`TEAMS` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`TEAMS` (
  `teamID`   INT NOT NULL AUTO_INCREMENT,
  `name` 	  VARCHAR(45) NOT NULL,
  `coach` 	  VARCHAR(45) NOT NULL,
  `membersID` INT NOT NULL,
  PRIMARY KEY (`teamID`),
  FOREIGN KEY (`membersID`) REFERENCES MEMBERS(`membersID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`MATCHES`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`MATCHES` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`MATCHES` (
  `matchID` 	  INT NOT NULL AUTO_INCREMENT,
  `teamID1` 	  INT NOT NULL,
  `teamID2` 	  INT NOT NULL,
  `age` 		  INT NOT NULL,
  `tournamentsID` INT NOT NULL,
  `winner` 		  INT NOT NULL,
  PRIMARY KEY (`matchID`),
  FOREIGN KEY (`teamID1`) REFERENCES TEAMS(`teamID`),
  FOREIGN KEY (`teamID2`) REFERENCES TEAMS(`teamID`),
  FOREIGN KEY (`winner`) REFERENCES TEAMS(`teamID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`CIRCUITPOINT`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`CIRCUITPOINT` ;

-- CREATE TABLE IF NOT EXISTS `cs_go_db`.`CIRCUITPOINT` (
--   `circuitPointID`  INT NOT NULL AUTO_INCREMENT,
--   `place` 			VARCHAR(45) NOT NULL,
--   `usd` 			DOUBLE NOT NULL,
--   `points` 			DOUBLE NOT NULL,
--   PRIMARY KEY (`circuitPointID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`PLAYOFFS`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`PLAYOFFS` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`PLAYOFFS` (
	`playoffsID` INT NOT NULL AUTO_INCREMENT,
	`phase`      VARCHAR(45) NOT NULL,
	`matchID` 	 INT NOT NULL,
  PRIMARY KEY (`playoffsID`),
  FOREIGN KEY (`matchID`) REFERENCES MATCHES(`matchID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`GROUPS`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`GROUPS` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`GROUPS_` (
  `groupID` 	INT NOT NULL AUTO_INCREMENT,
  `nameGroup` 	VARCHAR(45) NOT NULL,
  `teamID1` 	INT NOT NULL,
  `teamID2` 	INT NOT NULL,
  `teamID3` 	INT NOT NULL,
  `teamID4` 	INT NOT NULL,
  `matchID1` 	INT NOT NULL,
  `matchID2` 	INT NOT NULL,
  `matchID3` 	INT NOT NULL,
  `winner` 		INT NULL,
  PRIMARY KEY (`groupID`),
  FOREIGN KEY (`matchID1`) REFERENCES MATCHES(`matchID`),
  FOREIGN KEY (`matchID2`) REFERENCES MATCHES(`matchID`),
  FOREIGN KEY (`matchID3`) REFERENCES MATCHES(`matchID`),
  FOREIGN KEY (`teamID1`) REFERENCES TEAMS(`teamID`),
  FOREIGN KEY (`teamID2`) REFERENCES TEAMS(`teamID`),
  FOREIGN KEY (`teamID3`) REFERENCES TEAMS(`teamID`),
  FOREIGN KEY (`teamID4`) REFERENCES TEAMS(`teamID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`GROUPSTAGE`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`GROUPSTAGE` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`GROUPSTAGE` (
  `groupStageID` INT NOT NULL AUTO_INCREMENT,
  `groupID1` 	 INT NOT NULL,
  `groupID2` 	 INT NOT NULL,
  `groupID3` 	 INT NOT NULL,
  `groupID4`  	 INT NOT NULL,
  PRIMARY KEY (`groupStageID`),
  FOREIGN KEY (`groupID1`) REFERENCES  GROUPS_(`groupID`),
  FOREIGN KEY (`groupID2`) REFERENCES GROUPS_(`groupID`),
  FOREIGN KEY (`groupID3`) REFERENCES GROUPS_(`groupID`),
  FOREIGN KEY (`groupID4`) REFERENCES GROUPS_(`groupID`));

-- -----------------------------------------------------
-- Table `cs_go_db`.`TOURNAMENTS`
-- -----------------------------------------------------
-- DROP TABLE IF EXISTS `cs_go_db`.`TOURNAMENTS` ;

CREATE TABLE IF NOT EXISTS `cs_go_db`.`TOURNAMENTS` (
  `tournamentsID` 	INT NOT NULL AUTO_INCREMENT,
  `tournamentsName` VARCHAR(45) NOT NULL,
  `groupStageID` 	INT NOT NULL,
  `playoffsID`		INT NOT NULL, 
  -- `circuitPointID` 	INT NOT NULL,
  `prizePool` 		DOUBLE NULL,
  `winner` 			INT NOT NULL,
  primary key(`tournamentsID`),
  FOREIGN KEY (`groupStageID`) REFERENCES GROUPSTAGE(`groupStageID`),
  FOREIGN KEY (`circuitPointID`) REFERENCES CIRCUITPOINT(`circuitPointID`),
  FOREIGN KEY (`playoffsID`) REFERENCES PLAYOFFS(`playoffsID`),
  FOREIGN KEY (`winner`) REFERENCES TEAMS(`teamID`));

ALTER TABLE `MATCHES`
ADD FOREIGN KEY (`tournamentsID`) REFERENCES TOURNAMENTS(`tournamentsID`);

-- DROP DATABASE cs_go_db;